var ContainerModel=Backbone.Model.extend({}),UserModel=Backbone.Model.extend({}),UserCollection=Backbone.Collection.extend({model:UserModel}),ChatModel=Backbone.Model.extend({}),ChatCollection=Backbone.Collection.extend({model:ChatModel}),ChatroomModel=Backbone.Model.extend({defaults:{onlineUsers:new UserCollection,userChats:new ChatCollection([new ChatModel({sender:"Butters",message:"awwwwww hamburgers. ||):||",timestamp:_.now()})])},addUser:function(e){this.get("onlineUsers").add(new UserModel({username:e})),console.log("--adding-user---")},removeUser:function(e){var t=this.get("onlineUsers"),n=t.find(function(t){return t.get("username")==e});n&&t.remove(n)},addChat:function(e){var t=_.now();this.get("userChats").add(new ChatModel({sender:e.sender,message:e.message,timestamp:t}))}}),LoginModel=Backbone.Model.extend({defaults:{error:""}}),ContainerView=Backbone.View.extend({el:"#view-container",initialize:function(e){this.model.on("change:viewState",this.render,this)},render:function(){var e=this.model.get("viewState");this.$el.html(e.render().el)}}),LoginView=Backbone.View.extend({template:_.template($("#login-template").html()),events:{"click #nameBtn":"onLogin","keypress #nameText":"onHitEnter"},initialize:function(e){this.vent=e.vent,this.listenTo(this.model,"change:error",this.render,this)},render:function(){return this.$el.html(this.template(this.model.toJSON())),this},onLogin:function(){this.vent.trigger("login",this.$("#nameText").val())},onHitEnter:function(e){return 13==e.keyCode?(this.onLogin(),!1):void 0}}),ChatroomView=Backbone.View.extend({template:_.template($("#chatroom-template").html()),events:{"keypress .message-input":"messageInputPressed"},initialize:function(e){console.log(e),this.vent=e.vent;var t=this.model.get("onlineUsers"),n=this.model.get("userChats");this.listenTo(t,"add",this.renderUser,this),this.listenTo(t,"remove",this.renderUsers,this),this.listenTo(t,"reset",this.renderUsers,this),this.listenTo(n,"add",this.renderChat,this),this.listenTo(n,"remove",this.renderChats,this),this.listenTo(n,"reset",this.renderChats,this)},render:function(){this.model.get("onlineUsers");return this.$el.html(this.template()),this.renderUsers(),this.renderChats(),this},renderUsers:function(){this.$(".online-users").empty(),this.model.get("onlineUsers").each(function(e){this.renderUser(e)},this)},renderUser:function(e){var t=_.template($("#online-users-list-template").html());this.$(".online-users").append(t(e.toJSON()))},renderChats:function(){this.$(".chatbox-content").empty(),this.model.get("userChats").each(function(e){this.renderChat(e)},this)},renderChat:function(e){var t=_.template($("#chatbox-message-template").html()),n=$(t(e.toJSON()));n.appendTo(this.$(".chatbox-content")).hide().fadeIn().slideDown()},messageInputPressed:function(e){return 13===e.keyCode&&$.trim($(".message-input").val()).length>0?(this.vent.trigger("chat",this.$(".message-input").val()),this.$(".message-input").val(""),!1):(this.vent.trigger("typing"),void console.log("wut"))}}),ChatClient=function(e){var t,n=this,o=400,i=!1;n.vent=e.vent,n.hostname="http://"+window.location.host,n.connect=function(){n.socket=io.connect(n.hostname),n.setResponseListeners(n.socket)},n.login=function(e){n.socket.emit("login",e)},n.chat=function(e){n.socket.emit("chat",e)},n.addChatTyping=function(e){var t=e.username+" is typing";$(".typetypetype").text(t)},n.removeChatTyping=function(){$(".typetypetype").empty()},n.updateTyping=function(){n.socket&&(i||(i=!0,n.socket.emit("typing")),t=(new Date).getTime(),setTimeout(function(){var e=(new Date).getTime(),s=e-t;s>=o&&i&&(n.socket.emit("stop typing"),i=!1)},o))},n.setResponseListeners=function(e){e.on("welcome",function(t){e.emit("onlineUsers"),console.log("onlineUsers1: ",t),n.vent.trigger("loginDone",t)}),e.on("loginNameExists",function(e){console.log("loginNameExists: ",e),n.vent.trigger("loginNameExists",e)}),e.on("loginNameBad",function(e){console.log("loginNameBad: ",e),n.vent.trigger("loginNameBad",e)}),e.on("onlineUsers",function(e){n.vent.trigger("usersInfo",e)}),e.on("userJoined",function(e){console.log("userJoined: ",e),n.vent.trigger("userJoined",e)}),e.on("userLeft",function(e){console.log("userLeft: ",e),n.vent.trigger("userLeft",e)}),e.on("chat",function(e){console.log("chat: ",e),n.vent.trigger("chatReceived",e)}),e.on("typing",function(e){n.addChatTyping(e)}),e.on("stop typing",function(){n.removeChatTyping()})}};$(document).ready(function(){var e=new MainController;e.init()});var MainController=function(){var e=this;e.appEventBus=_.extend({},Backbone.Events),e.viewEventBus=_.extend({},Backbone.Events),e.init=function(){e.chatClient=new ChatClient({vent:e.appEventBus}),e.chatClient.connect(),e.loginModel=new LoginModel,e.containerModel=new ContainerModel({viewState:new LoginView({vent:e.viewEventBus,model:e.loginModel})}),e.containerView=new ContainerView({model:e.containerModel}),e.containerView.render()},e.viewEventBus.on("login",function(t){e.chatClient.login(t)}),e.viewEventBus.on("chat",function(t){e.chatClient.chat(t)}),e.viewEventBus.on("typing",function(){e.chatClient.updateTyping()}),e.appEventBus.on("loginDone",function(){e.chatroomModel=new ChatroomModel,e.chatroomView=new ChatroomView({vent:e.viewEventBus,model:e.chatroomModel}),e.containerModel.set("viewState",e.chatroomView),autosize($("textarea.message-input")),$(".chatbox-content")[0].scrollTop=$(".chatbox-content")[0].scrollHeight}),e.appEventBus.on("loginNameBad",function(t){e.loginModel.set("error","Invalid Name")}),e.appEventBus.on("loginNameExists",function(t){e.loginModel.set("error","Name already exists")}),e.appEventBus.on("usersInfo",function(t){var n=e.chatroomModel.get("onlineUsers"),o=_.map(t,function(e){return new UserModel({username:e})});n.reset(o)}),e.appEventBus.on("userJoined",function(t){e.chatroomModel.addUser(t),e.chatroomModel.addChat({sender:"Mayor McCheese",message:t+" joined room."})}),e.appEventBus.on("userLeft",function(t){e.chatroomModel.removeUser(t),e.chatroomModel.addChat({sender:"Grimace",message:t+" left room."})}),e.appEventBus.on("chatReceived",function(t){e.chatroomModel.addChat(t),$(".chatbox-content")[0].scrollTop=$(".chatbox-content")[0].scrollHeight})};
//# sourceMappingURL=data:application/json;base64,